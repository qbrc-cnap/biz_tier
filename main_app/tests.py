import unittest.mock as mock

from django.test import TestCase

from main_app.tasks import MailQueryException, \
    get_mailbox


class QualtricsSurveyTestCase(TestCase):
    '''
    This test class covers operations performed as part of querying
    the QBRC mailbox for survey results generated by the Qualtrics platform
    '''
    def setUp(self):
        pass
    
    def tearDown(self):
        pass


    @mock.patch('main_app.tasks.imaplib')
    @mock.patch('main_app.tasks.handle_exception')
    def test_unreachable_imap_server_informs_admins(self, mock_handle_ex, mock_imaplib):
        '''
        This covers the case where the initial query to the imap server
        does not work because the mail server is down, internet is not responding, etc.
        '''
        mock_class_inst_that_raises_ex = mock.MagicMock(side_effect=Exception('Some imaplib ex!'))
        mock_imaplib.IMAP4_SSL.return_value = mock_class_inst_that_raises_ex

        with self.assertRaises(MailQueryException):
            get_mailbox()

        self.assertTrue(mock_handle_ex.called) # notification was sent

    @mock.patch('main_app.tasks.imaplib')
    @mock.patch('main_app.tasks.handle_exception')
    def test_cannot_login_to_imap_server_informs_admins(self, mock_handle_ex, mock_imaplib):
        '''
        This covers the situation where we can contact the imap server
        but it does not login for whatever reason
        '''
        mock_imap_ssl_class = mock.MagicMock()
        mock_imap_ssl_class.login.side_effect = Exception('Could not login')
        mock_imaplib.IMAP4_SSL.return_value = mock_imap_ssl_class

        with self.assertRaises(MailQueryException):
            get_mailbox()

        self.assertTrue(mock_handle_ex.called) # notification was sent

    @mock.patch('main_app.tasks.imaplib')
    @mock.patch('main_app.tasks.handle_exception')
    def test_imap_mailbox_select_fails_informs_admins(self, mock_handle_ex, mock_imaplib):
        '''
        This covers the test where you cannot select the mailbox(maybe its name was changed?)
        '''
        mock_imap_ssl_class = mock.MagicMock()
        mock_imap_ssl_class.select.side_effect = Exception('Could not select mailbox')
        mock_imaplib.IMAP4_SSL.return_value = mock_imap_ssl_class

        with self.assertRaises(MailQueryException):
            get_mailbox()

        self.assertTrue(mock_handle_ex.called) # notification was sent


    def test_imap_search_function_failure_informs_admins(self):
        pass

    def test_search_returns_empty_list(self):
        pass

    def test_email_parse_error_informs_admins(self):